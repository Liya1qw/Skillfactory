# вступление
print('''
Правила игры в «Крестики-нолики»:
1. Игровое поле состоит из сетки размером 3х3.
2. Соревнуются два игрока, один из которых играет за "Х", а другой за "О".
3. Игроки размещают свои символы на свободные ячейки поочередно, начинает "Х".
4. Игрок побеждает, выстроив три своих символа подряд (вертикально, горизонтально или по диагонали).
5. Если все ячейки заняты и никто не собрал линию из трех символов, игра считается ничейной.
6. Чтобы сделать ход, игрокам нужно ввести координаты ячейки (пр. Введите две цифры (по горизонтали, по вертикали): 1 0).


Игрок 1: Х
Игрок 2: О
''')

#рисую карту, рядом пишу индексы эелементов карты
maps = [' ', '0', '1', '2',         # 0 1 2 3
        '0', '-', '-', '-',         # 4 5 6 7           5   6   7
        '1', '-', '-', '-',         # 8 9 10 11         9   10  11
        '2', '-', '-', '-']         # 12 13 14 15       13  14  15

#линии победы поиндексно
victories = [[5,6,7],
             [9,10,11],
             [13,14,15],
             [5,9,13],
             [6,10,14],
             [7,11,15],
             [5,10,15],
             [7,10,13]]

#отображение карты в консоли
def print_maps():
    print(maps[0], maps[1], maps[2], maps[3], sep=' ')
    print(maps[4], maps[5], maps[6], maps[7], sep=' ')
    print(maps[8], maps[9], maps[10], maps[11], sep=' ')
    print(maps[12], maps[13], maps[14], maps[15], sep=' ')

close = {}      #словарь для занятых ячеек
#делаю ход в ячейку
def step_sell(x,y,symbol):
    coordinate = {  # словарь координат введных пользователем и индексов под которые надо вставлять символы
        (0, 0): 5,
        (0, 1): 9,
        (0, 2): 13,
        (1, 0): 6,
        (1, 1): 10,
        (1, 2): 14,
        (2, 0): 7,
        (2, 1): 11,
        (2, 2): 15
    }

    z = coordinate[(x,y)]   # ищу в словаре координаты, вписанные пользователем и присваиваю переменной
    maps[z] = symbol        # по индексу в карте нахожу координаты и вместо них подставляю символ Х или О
    close[(x,y)] = symbol   # записываю в словарь занятые ячейки и символ занятой ячейки

#проверка на занятость ячейки
def close_cell(x,y):
    global close
    if (x,y) in close:      # если координата есть в словаре, то программа попросит пользователя переписать координату на не занятую ячейку
        return False
    return True


#результат игры
def who_winner():

    for i in victories:     # перебор линий победы и сравнение с ходом игрока
        if maps[i[0]] == 'X' and maps[i[1]] == 'X' and maps[i[2]] == 'X':       # беру победные индексы и сравниваю с такими же индексами на карте, одинаковые ли символы стоят
            return 'Игрок 1 победил!'
        if maps[i[0]] == 'O' and maps[i[1]] == 'O' and maps[i[2]] == 'O':  # беру победные индексы и сравниваю с такими же индексами на карте, одинаковые ли символы стоят
            return 'Игрок 2 победил!'
    return None         #если победителя нет

#основная программа
def game():
    game_over = False
    count = 0  # счетчик ходов

    while game_over == False:
        print_maps()  # Показываю карту

        # Ход игрока 1
        player_turn(1, 'X')
        count += 1
        winner = who_winner()       #проверка линий победы, вывод кто победил или None
        if winner:
            print(winner)
            break

        if count == 9:  # Если 9 ходов, то ничья
            print("Ничья!")
            break
        print_maps()

        # Ход игрока 2
        player_turn(2, 'O')
        count += 1
        winner = who_winner()
        if winner:
            print(winner)
            break

        if count == 9:  # Если 9 ходов, то ничья
            print("Ничья!")
            break

# Ход игрока
def player_turn(player, symbol):
    while True:
        step = list(map(int, input(f'\nИгрок {player}, ваш ход.\nВведите две цифры через пробел (по горизонтали, по вертикали): ').split()))
        x, y = step[0], step[1]

        if x not in [0, 1, 2] or y not in [0, 1, 2]:
            print('\nНекорректный ввод чисел. Введите числа от 0 до 2.')
        elif close_cell(x, y) == False:
            print('Упс! Эта ячейка уже занята, выберите другую.')
        else:
            step_sell(x, y, symbol)
            break

# Запуск игры

game()
print_maps()
